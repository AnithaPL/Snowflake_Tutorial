-- Generate a full setup script (PROVISION SHOP) for ITEM_MASTER, CASH_MASTER, and the procedure
-- Creates the ITEM_MASTER table with sample data
-- Creates the CASH_MASTER table
-- Creates a sequence BILL_SEQ for generating bill numbers
-- Creates the PRC_ITEM_MASTER stored procedure
-- Includes an example call to test the procedure


-- Step 1: Create ITEM_MASTER table
CREATE OR REPLACE TABLE ITEM_MASTER (
    ITEM_CODE VARCHAR PRIMARY KEY,
    ITEM_NAME VARCHAR,
    ITEM_QTY NUMBER,
    ITEM_RATE NUMBER
);

-- Insert sample items
INSERT INTO ITEM_MASTER VALUES 
('IT001', 'Item A', 10, 50),
('IT002', 'Item B', 20, 30),
('IT003', 'Item C', 5, 100);

-- Step 2: Create CASH_MASTER table
CREATE OR REPLACE TABLE CASH_MASTER (
    BILL_NO NUMBER,
    BILL_DATE DATE,
    AMOUNT NUMBER,
    PAYMENT_MODE VARCHAR
);

-- Step 3: Create BILL_SEQ sequence
CREATE OR REPLACE SEQUENCE BILL_SEQ START = 1 INCREMENT = 1;


-- Step 4: Create stored procedure using SELECT INTO (Implicit Cursor) in Snowflake
CREATE OR REPLACE PROCEDURE PRC_ITEM_MASTER(P_ITEM_CODE VARCHAR, P_ITEM_QTY NUMBER)
RETURNS VARCHAR
LANGUAGE SQL
AS
$$
DECLARE
    LV_ITEM_NAME VARCHAR;
    LV_ITEM_QTY NUMBER;
    LV_BILL_AMT NUMBER;
    LV_ITEM_RATE NUMBER;
    
BEGIN
    -- Select into variables using SELECT INTO (Implicit cursor)
    SELECT ITEM_NAME, ITEM_QTY, ITEM_RATE
    INTO LV_ITEM_NAME, LV_ITEM_QTY, LV_ITEM_RATE
    FROM ITEM_MASTER
   WHERE ITEM_CODE = :P_ITEM_CODE;

    -- Check if item is found
    IF (LV_ITEM_NAME IS NULL) THEN
        RETURN 'ITEM CODE IS NOT AVAILABLE';
    END IF;

    -- Check availability of the required quantity
    IF (LV_ITEM_QTY < :P_ITEM_QTY) THEN
        RETURN 'AVAILABILITY IS LESSER THAN THE REQUIRED QUANTITY. PLEASE CHANGE THE INPUT AND PROCEED';
    END IF;

    -- Update the ITEM_MASTER table to reduce the quantity
    UPDATE ITEM_MASTER 
    SET ITEM_QTY = ITEM_QTY - :P_ITEM_QTY 
    WHERE ITEM_CODE = :P_ITEM_CODE;
    
    -- Calculate the bill amount
    LV_BILL_AMT := LV_ITEM_RATE * :P_ITEM_QTY;

    -- Insert into CASH_MASTER with a new bill number from the sequence
    INSERT INTO CASH_MASTER 
    VALUES(BILL_SEQ.NEXTVAL, CURRENT_DATE, :LV_BILL_AMT, 'CASH');

    -- Return the item details
    RETURN LV_ITEM_NAME || '/' || LV_ITEM_QTY || '/' || LV_ITEM_RATE;
END;
$$;

CALL PRC_ITEM_MASTER('IT002', 2);

SELECT * FROM ITEM_MASTER;
SELECT * FROM CASH_MASTER;




